
---------- Begin Simulation Statistics ----------
simSeconds                                   0.043560                       # Number of seconds simulated (Second)
simTicks                                  43559786000                       # Number of ticks simulated (Tick)
finalTick                                 43559786000                       # Number of ticks from beginning of simulation (restored from checkpoints and never reset) (Tick)
simFreq                                  1000000000000                       # The number of ticks per simulated second ((Tick/Second))
hostSeconds                                     12.24                       # Real time elapsed on the host (Second)
hostTickRate                               3557501338                       # The number of ticks simulated per host second (ticks/s) ((Tick/Second))
hostMemory                                    8524208                       # Number of bytes of host memory used (Byte)
simInsts                                      2466567                       # Number of instructions simulated (Count)
simOps                                        4115367                       # Number of ops (including micro ops) simulated (Count)
hostInstRate                                   201439                       # Simulator instruction rate (inst/s) ((Count/Second))
hostOpRate                                     336091                       # Simulator op (including micro ops) rate (op/s) ((Count/Second))
system.clk_domain.clock                          1000                       # Clock period in ticks (Tick)
system.clk_domain.voltage_domain.voltage            1                       # Voltage in Volts (Volt)
system.cpu.numCycles                         43559786                       # Number of cpu cycles simulated (Cycle)
system.cpu.cpi                              17.660086                       # CPI: cycles per instruction (core level) ((Cycle/Count))
system.cpu.ipc                               0.056625                       # IPC: instructions per cycle (core level) ((Count/Cycle))
system.cpu.numWorkItemsStarted                      0                       # Number of work items this cpu started (Count)
system.cpu.numWorkItemsCompleted                    0                       # Number of work items this cpu completed (Count)
system.cpu.branchPred.lookups_0::NoBranch            0                       # Number of BP lookups (Count)
system.cpu.branchPred.lookups_0::Return             0                       # Number of BP lookups (Count)
system.cpu.branchPred.lookups_0::CallDirect            0                       # Number of BP lookups (Count)
system.cpu.branchPred.lookups_0::CallIndirect            0                       # Number of BP lookups (Count)
system.cpu.branchPred.lookups_0::DirectCond            0                       # Number of BP lookups (Count)
system.cpu.branchPred.lookups_0::DirectUncond            0                       # Number of BP lookups (Count)
system.cpu.branchPred.lookups_0::IndirectCond            0                       # Number of BP lookups (Count)
system.cpu.branchPred.lookups_0::IndirectUncond            0                       # Number of BP lookups (Count)
system.cpu.branchPred.lookups_0::total              0                       # Number of BP lookups (Count)
system.cpu.branchPred.squashes_0::NoBranch            0                       # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
system.cpu.branchPred.squashes_0::Return            0                       # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
system.cpu.branchPred.squashes_0::CallDirect            0                       # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
system.cpu.branchPred.squashes_0::CallIndirect            0                       # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
system.cpu.branchPred.squashes_0::DirectCond            0                       # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
system.cpu.branchPred.squashes_0::DirectUncond            0                       # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
system.cpu.branchPred.squashes_0::IndirectCond            0                       # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
system.cpu.branchPred.squashes_0::IndirectUncond            0                       # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
system.cpu.branchPred.squashes_0::total             0                       # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
system.cpu.branchPred.corrected_0::NoBranch            0                       # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
system.cpu.branchPred.corrected_0::Return            0                       # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
system.cpu.branchPred.corrected_0::CallDirect            0                       # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
system.cpu.branchPred.corrected_0::CallIndirect            0                       # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
system.cpu.branchPred.corrected_0::DirectCond            0                       # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
system.cpu.branchPred.corrected_0::DirectUncond            0                       # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
system.cpu.branchPred.corrected_0::IndirectCond            0                       # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
system.cpu.branchPred.corrected_0::IndirectUncond            0                       # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
system.cpu.branchPred.corrected_0::total            0                       # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
system.cpu.branchPred.earlyResteers_0::NoBranch            0                       # Number of branches that got redirected after decode. (Count)
system.cpu.branchPred.earlyResteers_0::Return            0                       # Number of branches that got redirected after decode. (Count)
system.cpu.branchPred.earlyResteers_0::CallDirect            0                       # Number of branches that got redirected after decode. (Count)
system.cpu.branchPred.earlyResteers_0::CallIndirect            0                       # Number of branches that got redirected after decode. (Count)
system.cpu.branchPred.earlyResteers_0::DirectCond            0                       # Number of branches that got redirected after decode. (Count)
system.cpu.branchPred.earlyResteers_0::DirectUncond            0                       # Number of branches that got redirected after decode. (Count)
system.cpu.branchPred.earlyResteers_0::IndirectCond            0                       # Number of branches that got redirected after decode. (Count)
system.cpu.branchPred.earlyResteers_0::IndirectUncond            0                       # Number of branches that got redirected after decode. (Count)
system.cpu.branchPred.earlyResteers_0::total            0                       # Number of branches that got redirected after decode. (Count)
system.cpu.branchPred.committed_0::NoBranch            0                       # Number of branches finally committed  (Count)
system.cpu.branchPred.committed_0::Return            0                       # Number of branches finally committed  (Count)
system.cpu.branchPred.committed_0::CallDirect            0                       # Number of branches finally committed  (Count)
system.cpu.branchPred.committed_0::CallIndirect            0                       # Number of branches finally committed  (Count)
system.cpu.branchPred.committed_0::DirectCond            0                       # Number of branches finally committed  (Count)
system.cpu.branchPred.committed_0::DirectUncond            0                       # Number of branches finally committed  (Count)
system.cpu.branchPred.committed_0::IndirectCond            0                       # Number of branches finally committed  (Count)
system.cpu.branchPred.committed_0::IndirectUncond            0                       # Number of branches finally committed  (Count)
system.cpu.branchPred.committed_0::total            0                       # Number of branches finally committed  (Count)
system.cpu.branchPred.mispredicted_0::NoBranch            0                       # Number of committed branches that were mispredicted. (Count)
system.cpu.branchPred.mispredicted_0::Return            0                       # Number of committed branches that were mispredicted. (Count)
system.cpu.branchPred.mispredicted_0::CallDirect            0                       # Number of committed branches that were mispredicted. (Count)
system.cpu.branchPred.mispredicted_0::CallIndirect            0                       # Number of committed branches that were mispredicted. (Count)
system.cpu.branchPred.mispredicted_0::DirectCond            0                       # Number of committed branches that were mispredicted. (Count)
system.cpu.branchPred.mispredicted_0::DirectUncond            0                       # Number of committed branches that were mispredicted. (Count)
system.cpu.branchPred.mispredicted_0::IndirectCond            0                       # Number of committed branches that were mispredicted. (Count)
system.cpu.branchPred.mispredicted_0::IndirectUncond            0                       # Number of committed branches that were mispredicted. (Count)
system.cpu.branchPred.mispredicted_0::total            0                       # Number of committed branches that were mispredicted. (Count)
system.cpu.branchPred.targetProvider_0::NoTarget            0                       # The component providing the target for taken branches (Count)
system.cpu.branchPred.targetProvider_0::BTB            0                       # The component providing the target for taken branches (Count)
system.cpu.branchPred.targetProvider_0::RAS            0                       # The component providing the target for taken branches (Count)
system.cpu.branchPred.targetProvider_0::Indirect            0                       # The component providing the target for taken branches (Count)
system.cpu.branchPred.targetProvider_0::total            0                       # The component providing the target for taken branches (Count)
system.cpu.branchPred.targetWrong_0::NoBranch            0                       # Number of branches where the target was incorrect or not available at prediction time. (Count)
system.cpu.branchPred.targetWrong_0::Return            0                       # Number of branches where the target was incorrect or not available at prediction time. (Count)
system.cpu.branchPred.targetWrong_0::CallDirect            0                       # Number of branches where the target was incorrect or not available at prediction time. (Count)
system.cpu.branchPred.targetWrong_0::CallIndirect            0                       # Number of branches where the target was incorrect or not available at prediction time. (Count)
system.cpu.branchPred.targetWrong_0::DirectCond            0                       # Number of branches where the target was incorrect or not available at prediction time. (Count)
system.cpu.branchPred.targetWrong_0::DirectUncond            0                       # Number of branches where the target was incorrect or not available at prediction time. (Count)
system.cpu.branchPred.targetWrong_0::IndirectCond            0                       # Number of branches where the target was incorrect or not available at prediction time. (Count)
system.cpu.branchPred.targetWrong_0::IndirectUncond            0                       # Number of branches where the target was incorrect or not available at prediction time. (Count)
system.cpu.branchPred.targetWrong_0::total            0                       # Number of branches where the target was incorrect or not available at prediction time. (Count)
system.cpu.branchPred.condPredicted                 0                       # Number of conditional branches predicted (Count)
system.cpu.branchPred.condPredictedTaken            0                       # Number of conditional branches predicted as taken (Count)
system.cpu.branchPred.condIncorrect                 0                       # Number of conditional branches incorrect (Count)
system.cpu.branchPred.predTakenBTBMiss              0                       # Number of branches predicted taken but missed in BTB (Count)
system.cpu.branchPred.NotTakenMispredicted            0                       # Number branches predicted 'not taken' but turned out to be taken (Count)
system.cpu.branchPred.TakenMispredicted             0                       # Number branches predicted taken but are actually not taken (Count)
system.cpu.branchPred.BTBLookups                    0                       # Number of BTB lookups (Count)
system.cpu.branchPred.BTBUpdates                    0                       # Number of BTB updates (Count)
system.cpu.branchPred.BTBHits                       0                       # Number of BTB hits (Count)
system.cpu.branchPred.BTBHitRatio                 nan                       # BTB Hit Ratio (Ratio)
system.cpu.branchPred.BTBMispredicted               0                       # Number BTB mispredictions. No target found or target wrong (Count)
system.cpu.branchPred.indirectLookups               0                       # Number of indirect predictor lookups. (Count)
system.cpu.branchPred.indirectHits                  0                       # Number of indirect target hits. (Count)
system.cpu.branchPred.indirectMisses                0                       # Number of indirect misses. (Count)
system.cpu.branchPred.indirectMispredicted            0                       # Number of mispredicted indirect branches. (Count)
system.cpu.branchPred.btb.lookups::NoBranch            0                       # Number of BTB lookups (Count)
system.cpu.branchPred.btb.lookups::Return            0                       # Number of BTB lookups (Count)
system.cpu.branchPred.btb.lookups::CallDirect            0                       # Number of BTB lookups (Count)
system.cpu.branchPred.btb.lookups::CallIndirect            0                       # Number of BTB lookups (Count)
system.cpu.branchPred.btb.lookups::DirectCond            0                       # Number of BTB lookups (Count)
system.cpu.branchPred.btb.lookups::DirectUncond            0                       # Number of BTB lookups (Count)
system.cpu.branchPred.btb.lookups::IndirectCond            0                       # Number of BTB lookups (Count)
system.cpu.branchPred.btb.lookups::IndirectUncond            0                       # Number of BTB lookups (Count)
system.cpu.branchPred.btb.lookups::total            0                       # Number of BTB lookups (Count)
system.cpu.branchPred.btb.misses::NoBranch            0                       # Number of BTB misses (Count)
system.cpu.branchPred.btb.misses::Return            0                       # Number of BTB misses (Count)
system.cpu.branchPred.btb.misses::CallDirect            0                       # Number of BTB misses (Count)
system.cpu.branchPred.btb.misses::CallIndirect            0                       # Number of BTB misses (Count)
system.cpu.branchPred.btb.misses::DirectCond            0                       # Number of BTB misses (Count)
system.cpu.branchPred.btb.misses::DirectUncond            0                       # Number of BTB misses (Count)
system.cpu.branchPred.btb.misses::IndirectCond            0                       # Number of BTB misses (Count)
system.cpu.branchPred.btb.misses::IndirectUncond            0                       # Number of BTB misses (Count)
system.cpu.branchPred.btb.misses::total             0                       # Number of BTB misses (Count)
system.cpu.branchPred.btb.updates::NoBranch            0                       # Number of BTB updates (Count)
system.cpu.branchPred.btb.updates::Return            0                       # Number of BTB updates (Count)
system.cpu.branchPred.btb.updates::CallDirect            0                       # Number of BTB updates (Count)
system.cpu.branchPred.btb.updates::CallIndirect            0                       # Number of BTB updates (Count)
system.cpu.branchPred.btb.updates::DirectCond            0                       # Number of BTB updates (Count)
system.cpu.branchPred.btb.updates::DirectUncond            0                       # Number of BTB updates (Count)
system.cpu.branchPred.btb.updates::IndirectCond            0                       # Number of BTB updates (Count)
system.cpu.branchPred.btb.updates::IndirectUncond            0                       # Number of BTB updates (Count)
system.cpu.branchPred.btb.updates::total            0                       # Number of BTB updates (Count)
system.cpu.branchPred.btb.mispredict::NoBranch            0                       # Number of BTB mispredictions. No target found or target wrong. (Count)
system.cpu.branchPred.btb.mispredict::Return            0                       # Number of BTB mispredictions. No target found or target wrong. (Count)
system.cpu.branchPred.btb.mispredict::CallDirect            0                       # Number of BTB mispredictions. No target found or target wrong. (Count)
system.cpu.branchPred.btb.mispredict::CallIndirect            0                       # Number of BTB mispredictions. No target found or target wrong. (Count)
system.cpu.branchPred.btb.mispredict::DirectCond            0                       # Number of BTB mispredictions. No target found or target wrong. (Count)
system.cpu.branchPred.btb.mispredict::DirectUncond            0                       # Number of BTB mispredictions. No target found or target wrong. (Count)
system.cpu.branchPred.btb.mispredict::IndirectCond            0                       # Number of BTB mispredictions. No target found or target wrong. (Count)
system.cpu.branchPred.btb.mispredict::IndirectUncond            0                       # Number of BTB mispredictions. No target found or target wrong. (Count)
system.cpu.branchPred.btb.mispredict::total            0                       # Number of BTB mispredictions. No target found or target wrong. (Count)
system.cpu.branchPred.btb.power_state.pwrStateResidencyTicks::UNDEFINED  43559786000                       # Cumulative time (in ticks) in various power states (Tick)
system.cpu.branchPred.indirectBranchPred.lookups            0                       # Number of lookups (Count)
system.cpu.branchPred.indirectBranchPred.hits            0                       # Number of hits of a tag (Count)
system.cpu.branchPred.indirectBranchPred.misses            0                       # Number of misses (Count)
system.cpu.branchPred.indirectBranchPred.targetRecords            0                       # Number of targets that where recorded/installed in the cache (Count)
system.cpu.branchPred.indirectBranchPred.indirectRecords            0                       # Number of indirect branches/calls recorded in the indirect hist (Count)
system.cpu.branchPred.indirectBranchPred.speculativeOverflows            0                       # Number of times more than the allowed capacity for speculative branches/calls where in flight and destroy the path history (Count)
system.cpu.branchPred.ras.pushes                    0                       # Number of times a PC was pushed onto the RAS (Count)
system.cpu.branchPred.ras.pops                      0                       # Number of times a PC was poped from the RAS (Count)
system.cpu.branchPred.ras.squashes                  0                       # Number of times the stack operation was squashed due to wrong speculation. (Count)
system.cpu.branchPred.ras.used                      0                       # Number of times the RAS is the provider (Count)
system.cpu.branchPred.ras.correct                   0                       # Number of times the RAS is the provider and the prediction is correct (Count)
system.cpu.branchPred.ras.incorrect                 0                       # Number of times the RAS is the provider and the prediction is wrong (Count)
system.cpu.commitStats0.numInsts              2466567                       # Number of instructions committed (thread level) (Count)
system.cpu.commitStats0.numOps                4115367                       # Number of ops (including micro ops) committed (thread level) (Count)
system.cpu.commitStats0.numInstsNotNOP              0                       # Number of instructions committed excluding NOPs or prefetches (Count)
system.cpu.commitStats0.numOpsNotNOP                0                       # Number of Ops (including micro ops) Simulated (Count)
system.cpu.commitStats0.cpi                 17.660086                       # CPI: cycles per instruction (thread level) ((Cycle/Count))
system.cpu.commitStats0.ipc                  0.056625                       # IPC: instructions per cycle (thread level) ((Count/Cycle))
system.cpu.commitStats0.numMemRefs                  0                       # Number of memory references committed (Count)
system.cpu.commitStats0.numFpInsts                  0                       # Number of float instructions (Count)
system.cpu.commitStats0.numIntInsts                 0                       # Number of integer instructions (Count)
system.cpu.commitStats0.numLoadInsts                0                       # Number of load instructions (Count)
system.cpu.commitStats0.numStoreInsts               0                       # Number of store instructions (Count)
system.cpu.commitStats0.numVecInsts                 0                       # Number of vector instructions (Count)
system.cpu.commitStats0.committedInstType::No_OpClass        20781      0.50%      0.50% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::IntAlu      3453719     83.92%     84.43% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::IntMult            4      0.00%     84.43% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::IntDiv           21      0.00%     84.43% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::FloatAdd          173      0.00%     84.43% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::FloatCmp            0      0.00%     84.43% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::FloatCvt            0      0.00%     84.43% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::FloatMult            0      0.00%     84.43% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::FloatMultAcc            0      0.00%     84.43% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::FloatDiv            0      0.00%     84.43% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::FloatMisc            0      0.00%     84.43% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::FloatSqrt            0      0.00%     84.43% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdAdd            8      0.00%     84.43% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdAddAcc            0      0.00%     84.43% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdAlu          100      0.00%     84.43% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdCmp            6      0.00%     84.44% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdCvt           66      0.00%     84.44% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdMisc          248      0.01%     84.44% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdMult            0      0.00%     84.44% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdMultAcc            0      0.00%     84.44% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdMatMultAcc            0      0.00%     84.44% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdShift            0      0.00%     84.44% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdShiftAcc            0      0.00%     84.44% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdDiv            0      0.00%     84.44% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdSqrt            0      0.00%     84.44% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdFloatAdd            0      0.00%     84.44% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdFloatAlu            0      0.00%     84.44% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdFloatCmp            0      0.00%     84.44% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdFloatCvt            0      0.00%     84.44% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdFloatDiv            0      0.00%     84.44% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdFloatMisc            0      0.00%     84.44% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdFloatMult            0      0.00%     84.44% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdFloatMultAcc            0      0.00%     84.44% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdFloatMatMultAcc            0      0.00%     84.44% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdFloatSqrt            0      0.00%     84.44% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdReduceAdd            0      0.00%     84.44% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdReduceAlu            0      0.00%     84.44% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdReduceCmp            0      0.00%     84.44% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdFloatReduceAdd            0      0.00%     84.44% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdFloatReduceCmp            0      0.00%     84.44% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdAes            0      0.00%     84.44% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdAesMix            0      0.00%     84.44% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdSha1Hash            0      0.00%     84.44% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdSha1Hash2            0      0.00%     84.44% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdSha256Hash            0      0.00%     84.44% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdSha256Hash2            0      0.00%     84.44% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdShaSigma2            0      0.00%     84.44% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdShaSigma3            0      0.00%     84.44% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdPredAlu            0      0.00%     84.44% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::Matrix            0      0.00%     84.44% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::MatrixMov            0      0.00%     84.44% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::MatrixOP            0      0.00%     84.44% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::MemRead       318681      7.74%     92.19% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::MemWrite       222188      5.40%     97.59% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::FloatMemRead        49489      1.20%     98.79% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::FloatMemWrite        49883      1.21%    100.00% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::IprAccess            0      0.00%    100.00% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::InstPrefetch            0      0.00%    100.00% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::VectorMisc            0      0.00%    100.00% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::VectorConfig            0      0.00%    100.00% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::total      4115367                       # Class of committed instruction. (Count)
system.cpu.executeStats0.numInsts                   0                       # Number of executed instructions (Count)
system.cpu.executeStats0.numNop                     0                       # Number of nop insts executed (Count)
system.cpu.executeStats0.numBranches                0                       # Number of branches executed (Count)
system.cpu.executeStats0.numLoadInsts               0                       # Number of load instructions executed (Count)
system.cpu.executeStats0.numStoreInsts              0                       # Number of stores executed (Count)
system.cpu.executeStats0.instRate                   0                       # Inst execution rate ((Count/Cycle))
system.cpu.executeStats0.numFpRegWrites             0                       # Number of times the floating registers were written (Count)
system.cpu.executeStats0.numMemRefs                 0                       # Number of memory refs (Count)
system.cpu.executeStats0.numVecAluAccesses            0                       # Number of vector alu accesses (Count)
system.cpu.executeStats0.numDiscardedOps       816983                       # Number of ops (including micro ops) which were discarded before commit (Count)
system.cpu.fetch2.intInstructions                  46                       # Number of integer instructions successfully decoded (Count)
system.cpu.fetch2.fpInstructions                    0                       # Number of floating point instructions successfully decoded (Count)
system.cpu.fetch2.vecInstructions                   0                       # Number of SIMD instructions successfully decoded (Count)
system.cpu.fetch2.loadInstructions                  0                       # Number of memory load instructions successfully decoded (Count)
system.cpu.fetch2.storeInstructions                 0                       # Number of memory store instructions successfully decoded (Count)
system.cpu.fetch2.amoInstructions                   0                       # Number of memory atomic instructions successfully decoded (Count)
system.cpu.fetchStats0.numInsts                     0                       # Number of instructions fetched (thread level) (Count)
system.cpu.fetchStats0.numOps                       0                       # Number of ops (including micro ops) fetched (thread level) (Count)
system.cpu.fetchStats0.fetchRate                    0                       # Number of inst fetches per cycle ((Count/Cycle))
system.cpu.fetchStats0.branchRate                   0                       # Number of branch fetches per cycle (Ratio)
system.cpu.fetchStats0.numFetchSuspends             0                       # Number of times Execute suspended instruction fetching (Count)
system.cpu.interrupts.clk_domain.clock          16000                       # Clock period in ticks (Tick)
system.cpu.mmu.dtb.rdAccesses                  397647                       # TLB accesses on read requests (Count)
system.cpu.mmu.dtb.wrAccesses                  326373                       # TLB accesses on write requests (Count)
system.cpu.mmu.dtb.rdMisses                        64                       # TLB misses on read requests (Count)
system.cpu.mmu.dtb.wrMisses                        19                       # TLB misses on write requests (Count)
system.cpu.mmu.dtb.walker.power_state.pwrStateResidencyTicks::UNDEFINED  43559786000                       # Cumulative time (in ticks) in various power states (Tick)
system.cpu.mmu.itb.rdAccesses                       0                       # TLB accesses on read requests (Count)
system.cpu.mmu.itb.wrAccesses                  704454                       # TLB accesses on write requests (Count)
system.cpu.mmu.itb.rdMisses                         0                       # TLB misses on read requests (Count)
system.cpu.mmu.itb.wrMisses                        47                       # TLB misses on write requests (Count)
system.cpu.mmu.itb.walker.power_state.pwrStateResidencyTicks::UNDEFINED  43559786000                       # Cumulative time (in ticks) in various power states (Tick)
system.cpu.power_state.pwrStateResidencyTicks::ON  43559786000                       # Cumulative time (in ticks) in various power states (Tick)
system.cpu.thread_0.numInsts                  2466567                       # Number of Instructions committed (Count)
system.cpu.thread_0.numOps                    4115367                       # Number of Ops committed (Count)
system.cpu.thread_0.numMemRefs                      0                       # Number of Memory References (Count)
system.cpu.workload.numSyscalls                    15                       # Number of system calls (Count)
system.mem_ctrl.avgPriority_cpu.inst::samples    704454.00                       # Average QoS priority value for accepted requests (Count)
system.mem_ctrl.avgPriority_cpu.data::samples    370612.00                       # Average QoS priority value for accepted requests (Count)
system.mem_ctrl.priorityMinLatency       0.000000018750                       # per QoS priority minimum request to response latency (Second)
system.mem_ctrl.priorityMaxLatency       0.002204863250                       # per QoS priority maximum request to response latency (Second)
system.mem_ctrl.numReadWriteTurnArounds           480                       # Number of turnarounds from READ to WRITE (Count)
system.mem_ctrl.numWriteReadTurnArounds           480                       # Number of turnarounds from WRITE to READ (Count)
system.mem_ctrl.numStayReadState              2417086                       # Number of times bus staying in READ state (Count)
system.mem_ctrl.numStayWriteState                7206                       # Number of times bus staying in WRITE state (Count)
system.mem_ctrl.readReqs                      1090248                       # Number of read requests accepted (Count)
system.mem_ctrl.writeReqs                      272070                       # Number of write requests accepted (Count)
system.mem_ctrl.readBursts                    1090248                       # Number of controller read bursts, including those serviced by the write queue (Count)
system.mem_ctrl.writeBursts                    272070                       # Number of controller write bursts, including those merged in the write queue (Count)
system.mem_ctrl.servicedByWrQ                   22892                       # Number of controller read bursts serviced by the write queue (Count)
system.mem_ctrl.mergedWrBursts                 264360                       # Number of controller write bursts merged with an existing one (Count)
system.mem_ctrl.neitherReadNorWriteReqs             0                       # Number of requests that are neither read nor write (Count)
system.mem_ctrl.avgRdQLen                        1.34                       # Average read queue length when enqueuing ((Count/Tick))
system.mem_ctrl.avgWrQLen                       26.09                       # Average write queue length when enqueuing ((Count/Tick))
system.mem_ctrl.numRdRetry                          0                       # Number of times read queue was full causing retry (Count)
system.mem_ctrl.numWrRetry                          0                       # Number of times write queue was full causing retry (Count)
system.mem_ctrl.readPktSize::0                    224                       # Read request sizes (log2) (Count)
system.mem_ctrl.readPktSize::1                     19                       # Read request sizes (log2) (Count)
system.mem_ctrl.readPktSize::2                 236540                       # Read request sizes (log2) (Count)
system.mem_ctrl.readPktSize::3                 149011                       # Read request sizes (log2) (Count)
system.mem_ctrl.readPktSize::4                      0                       # Read request sizes (log2) (Count)
system.mem_ctrl.readPktSize::5                      0                       # Read request sizes (log2) (Count)
system.mem_ctrl.readPktSize::6                 704454                       # Read request sizes (log2) (Count)
system.mem_ctrl.writePktSize::0                    34                       # Write request sizes (log2) (Count)
system.mem_ctrl.writePktSize::1                     2                       # Write request sizes (log2) (Count)
system.mem_ctrl.writePktSize::2                127354                       # Write request sizes (log2) (Count)
system.mem_ctrl.writePktSize::3                144680                       # Write request sizes (log2) (Count)
system.mem_ctrl.writePktSize::4                     0                       # Write request sizes (log2) (Count)
system.mem_ctrl.writePktSize::5                     0                       # Write request sizes (log2) (Count)
system.mem_ctrl.writePktSize::6                     0                       # Write request sizes (log2) (Count)
system.mem_ctrl.rdQLenPdf::0                   792964                       # What read queue length does an incoming req see (Count)
system.mem_ctrl.rdQLenPdf::1                   270165                       # What read queue length does an incoming req see (Count)
system.mem_ctrl.rdQLenPdf::2                     4227                       # What read queue length does an incoming req see (Count)
system.mem_ctrl.rdQLenPdf::3                        0                       # What read queue length does an incoming req see (Count)
system.mem_ctrl.rdQLenPdf::4                        0                       # What read queue length does an incoming req see (Count)
system.mem_ctrl.rdQLenPdf::5                        0                       # What read queue length does an incoming req see (Count)
system.mem_ctrl.rdQLenPdf::6                        0                       # What read queue length does an incoming req see (Count)
system.mem_ctrl.rdQLenPdf::7                        0                       # What read queue length does an incoming req see (Count)
system.mem_ctrl.rdQLenPdf::8                        0                       # What read queue length does an incoming req see (Count)
system.mem_ctrl.rdQLenPdf::9                        0                       # What read queue length does an incoming req see (Count)
system.mem_ctrl.rdQLenPdf::10                       0                       # What read queue length does an incoming req see (Count)
system.mem_ctrl.rdQLenPdf::11                       0                       # What read queue length does an incoming req see (Count)
system.mem_ctrl.rdQLenPdf::12                       0                       # What read queue length does an incoming req see (Count)
system.mem_ctrl.rdQLenPdf::13                       0                       # What read queue length does an incoming req see (Count)
system.mem_ctrl.rdQLenPdf::14                       0                       # What read queue length does an incoming req see (Count)
system.mem_ctrl.rdQLenPdf::15                       0                       # What read queue length does an incoming req see (Count)
system.mem_ctrl.rdQLenPdf::16                       0                       # What read queue length does an incoming req see (Count)
system.mem_ctrl.rdQLenPdf::17                       0                       # What read queue length does an incoming req see (Count)
system.mem_ctrl.rdQLenPdf::18                       0                       # What read queue length does an incoming req see (Count)
system.mem_ctrl.rdQLenPdf::19                       0                       # What read queue length does an incoming req see (Count)
system.mem_ctrl.rdQLenPdf::20                       0                       # What read queue length does an incoming req see (Count)
system.mem_ctrl.rdQLenPdf::21                       0                       # What read queue length does an incoming req see (Count)
system.mem_ctrl.rdQLenPdf::22                       0                       # What read queue length does an incoming req see (Count)
system.mem_ctrl.rdQLenPdf::23                       0                       # What read queue length does an incoming req see (Count)
system.mem_ctrl.rdQLenPdf::24                       0                       # What read queue length does an incoming req see (Count)
system.mem_ctrl.rdQLenPdf::25                       0                       # What read queue length does an incoming req see (Count)
system.mem_ctrl.rdQLenPdf::26                       0                       # What read queue length does an incoming req see (Count)
system.mem_ctrl.rdQLenPdf::27                       0                       # What read queue length does an incoming req see (Count)
system.mem_ctrl.rdQLenPdf::28                       0                       # What read queue length does an incoming req see (Count)
system.mem_ctrl.rdQLenPdf::29                       0                       # What read queue length does an incoming req see (Count)
system.mem_ctrl.rdQLenPdf::30                       0                       # What read queue length does an incoming req see (Count)
system.mem_ctrl.rdQLenPdf::31                       0                       # What read queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::0                        1                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::1                        1                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::2                        1                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::3                        1                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::4                        1                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::5                        1                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::6                        1                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::7                        1                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::8                        1                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::9                        1                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::10                       1                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::11                       1                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::12                       1                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::13                       1                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::14                       1                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::15                       1                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::16                       1                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::17                     474                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::18                     480                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::19                     480                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::20                     481                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::21                     481                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::22                     482                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::23                     482                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::24                     482                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::25                     482                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::26                     481                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::27                     484                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::28                     482                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::29                     481                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::30                     481                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::31                     480                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::32                     480                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::33                       0                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::34                       0                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::35                       0                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::36                       0                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::37                       0                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::38                       0                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::39                       0                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::40                       0                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::41                       0                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::42                       0                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::43                       0                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::44                       0                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::45                       0                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::46                       0                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::47                       0                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::48                       0                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::49                       0                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::50                       0                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::51                       0                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::52                       0                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::53                       0                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::54                       0                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::55                       0                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::56                       0                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::57                       0                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::58                       0                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::59                       0                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::60                       0                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::61                       0                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::62                       0                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::63                       0                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.rdPerTurnAround::samples          480                       # Reads before turning the bus around for writes (Count)
system.mem_ctrl.rdPerTurnAround::mean     2223.154167                       # Reads before turning the bus around for writes (Count)
system.mem_ctrl.rdPerTurnAround::gmean    1190.164681                       # Reads before turning the bus around for writes (Count)
system.mem_ctrl.rdPerTurnAround::stdev    2667.611460                       # Reads before turning the bus around for writes (Count)
system.mem_ctrl.rdPerTurnAround::0-511            154     32.08%     32.08% # Reads before turning the bus around for writes (Count)
system.mem_ctrl.rdPerTurnAround::512-1023           39      8.12%     40.21% # Reads before turning the bus around for writes (Count)
system.mem_ctrl.rdPerTurnAround::1024-1535           94     19.58%     59.79% # Reads before turning the bus around for writes (Count)
system.mem_ctrl.rdPerTurnAround::1536-2047           73     15.21%     75.00% # Reads before turning the bus around for writes (Count)
system.mem_ctrl.rdPerTurnAround::2048-2559            8      1.67%     76.67% # Reads before turning the bus around for writes (Count)
system.mem_ctrl.rdPerTurnAround::2560-3071           10      2.08%     78.75% # Reads before turning the bus around for writes (Count)
system.mem_ctrl.rdPerTurnAround::3072-3583            4      0.83%     79.58% # Reads before turning the bus around for writes (Count)
system.mem_ctrl.rdPerTurnAround::3584-4095           11      2.29%     81.88% # Reads before turning the bus around for writes (Count)
system.mem_ctrl.rdPerTurnAround::4096-4607            7      1.46%     83.33% # Reads before turning the bus around for writes (Count)
system.mem_ctrl.rdPerTurnAround::4608-5119           11      2.29%     85.62% # Reads before turning the bus around for writes (Count)
system.mem_ctrl.rdPerTurnAround::5120-5631            8      1.67%     87.29% # Reads before turning the bus around for writes (Count)
system.mem_ctrl.rdPerTurnAround::5632-6143            7      1.46%     88.75% # Reads before turning the bus around for writes (Count)
system.mem_ctrl.rdPerTurnAround::6144-6655            7      1.46%     90.21% # Reads before turning the bus around for writes (Count)
system.mem_ctrl.rdPerTurnAround::6656-7167            1      0.21%     90.42% # Reads before turning the bus around for writes (Count)
system.mem_ctrl.rdPerTurnAround::7168-7679            8      1.67%     92.08% # Reads before turning the bus around for writes (Count)
system.mem_ctrl.rdPerTurnAround::7680-8191            4      0.83%     92.92% # Reads before turning the bus around for writes (Count)
system.mem_ctrl.rdPerTurnAround::8192-8703           10      2.08%     95.00% # Reads before turning the bus around for writes (Count)
system.mem_ctrl.rdPerTurnAround::8704-9215            5      1.04%     96.04% # Reads before turning the bus around for writes (Count)
system.mem_ctrl.rdPerTurnAround::9216-9727            3      0.62%     96.67% # Reads before turning the bus around for writes (Count)
system.mem_ctrl.rdPerTurnAround::9728-10239            4      0.83%     97.50% # Reads before turning the bus around for writes (Count)
system.mem_ctrl.rdPerTurnAround::10240-10751            9      1.88%     99.38% # Reads before turning the bus around for writes (Count)
system.mem_ctrl.rdPerTurnAround::10752-11263            2      0.42%     99.79% # Reads before turning the bus around for writes (Count)
system.mem_ctrl.rdPerTurnAround::11264-11775            1      0.21%    100.00% # Reads before turning the bus around for writes (Count)
system.mem_ctrl.rdPerTurnAround::total            480                       # Reads before turning the bus around for writes (Count)
system.mem_ctrl.wrPerTurnAround::samples          480                       # Writes before turning the bus around for reads (Count)
system.mem_ctrl.wrPerTurnAround::mean              16                       # Writes before turning the bus around for reads (Count)
system.mem_ctrl.wrPerTurnAround::gmean      16.000000                       # Writes before turning the bus around for reads (Count)
system.mem_ctrl.wrPerTurnAround::16               480    100.00%    100.00% # Writes before turning the bus around for reads (Count)
system.mem_ctrl.wrPerTurnAround::total            480                       # Writes before turning the bus around for reads (Count)
system.mem_ctrl.bytesReadWrQ                  1465088                       # Total number of bytes read from write queue (Byte)
system.mem_ctrl.bytesReadSys                 47223562                       # Total read bytes from the system interface side (Byte)
system.mem_ctrl.bytesWrittenSys               1666894                       # Total written bytes from the system interface side (Byte)
system.mem_ctrl.avgRdBWSys               1084109136.80797219                       # Average system read bandwidth in Byte/s ((Byte/Second))
system.mem_ctrl.avgWrBWSys               38266808.74878494                       # Average system write bandwidth in Byte/s ((Byte/Second))
system.mem_ctrl.totGap                    43559780000                       # Total gap between requests (Tick)
system.mem_ctrl.avgGap                       31974.75                       # Average gap between requests ((Tick/Count))
system.mem_ctrl.requestorReadBytes::cpu.inst     45085056                       # Per-requestor bytes read from memory (Byte)
system.mem_ctrl.requestorReadBytes::cpu.data      1997604                       # Per-requestor bytes read from memory (Byte)
system.mem_ctrl.requestorWriteBytes::cpu.data        44211                       # Per-requestor bytes write to memory (Byte)
system.mem_ctrl.requestorReadRate::cpu.inst 1035015553.106711745262                       # Per-requestor bytes read from memory rate ((Byte/Second))
system.mem_ctrl.requestorReadRate::cpu.data 45858902.979918219149                       # Per-requestor bytes read from memory rate ((Byte/Second))
system.mem_ctrl.requestorWriteRate::cpu.data 1014949.889790551271                       # Per-requestor bytes write to memory rate ((Byte/Second))
system.mem_ctrl.requestorReadAccesses::cpu.inst       704454                       # Per-requestor read serviced memory accesses (Count)
system.mem_ctrl.requestorReadAccesses::cpu.data       385794                       # Per-requestor read serviced memory accesses (Count)
system.mem_ctrl.requestorWriteAccesses::cpu.data       272070                       # Per-requestor write serviced memory accesses (Count)
system.mem_ctrl.requestorReadTotalLat::cpu.inst  15257132500                       # Per-requestor read total memory access latency (Tick)
system.mem_ctrl.requestorReadTotalLat::cpu.data   8482874750                       # Per-requestor read total memory access latency (Tick)
system.mem_ctrl.requestorWriteTotalLat::cpu.data 1114788693250                       # Per-requestor write total memory access latency (Tick)
system.mem_ctrl.requestorReadAvgLat::cpu.inst     21658.10                       # Per-requestor read average memory access latency ((Tick/Count))
system.mem_ctrl.requestorReadAvgLat::cpu.data     21988.09                       # Per-requestor read average memory access latency ((Tick/Count))
system.mem_ctrl.requestorWriteAvgLat::cpu.data   4097433.36                       # Per-requestor write average memory access latency ((Tick/Count))
system.mem_ctrl.dram.bytesRead::cpu.inst     45084992                       # Number of bytes read from this memory (Byte)
system.mem_ctrl.dram.bytesRead::cpu.data      2138506                       # Number of bytes read from this memory (Byte)
system.mem_ctrl.dram.bytesRead::total        47223498                       # Number of bytes read from this memory (Byte)
system.mem_ctrl.dram.bytesInstRead::cpu.inst     45084992                       # Number of instructions bytes read from this memory (Byte)
system.mem_ctrl.dram.bytesInstRead::total     45084992                       # Number of instructions bytes read from this memory (Byte)
system.mem_ctrl.dram.bytesWritten::cpu.data      1666894                       # Number of bytes written to this memory (Byte)
system.mem_ctrl.dram.bytesWritten::total      1666894                       # Number of bytes written to this memory (Byte)
system.mem_ctrl.dram.numReads::cpu.inst        704453                       # Number of read requests responded to by this memory (Count)
system.mem_ctrl.dram.numReads::cpu.data        385794                       # Number of read requests responded to by this memory (Count)
system.mem_ctrl.dram.numReads::total          1090247                       # Number of read requests responded to by this memory (Count)
system.mem_ctrl.dram.numWrites::cpu.data       272070                       # Number of write requests responded to by this memory (Count)
system.mem_ctrl.dram.numWrites::total          272070                       # Number of write requests responded to by this memory (Count)
system.mem_ctrl.dram.bwRead::cpu.inst      1035014084                       # Total read bandwidth from this memory ((Byte/Second))
system.mem_ctrl.dram.bwRead::cpu.data        49093584                       # Total read bandwidth from this memory ((Byte/Second))
system.mem_ctrl.dram.bwRead::total         1084107668                       # Total read bandwidth from this memory ((Byte/Second))
system.mem_ctrl.dram.bwInstRead::cpu.inst   1035014084                       # Instruction read bandwidth from this memory ((Byte/Second))
system.mem_ctrl.dram.bwInstRead::total     1035014084                       # Instruction read bandwidth from this memory ((Byte/Second))
system.mem_ctrl.dram.bwWrite::cpu.data       38266809                       # Write bandwidth from this memory ((Byte/Second))
system.mem_ctrl.dram.bwWrite::total          38266809                       # Write bandwidth from this memory ((Byte/Second))
system.mem_ctrl.dram.bwTotal::cpu.inst     1035014084                       # Total bandwidth to/from this memory ((Byte/Second))
system.mem_ctrl.dram.bwTotal::cpu.data       87360392                       # Total bandwidth to/from this memory ((Byte/Second))
system.mem_ctrl.dram.bwTotal::total        1122374476                       # Total bandwidth to/from this memory ((Byte/Second))
system.mem_ctrl.dram.readBursts               1067356                       # Number of DRAM read bursts (Count)
system.mem_ctrl.dram.writeBursts                 7680                       # Number of DRAM write bursts (Count)
system.mem_ctrl.dram.perBankRdBursts::0        700857                       # Per bank write bursts (Count)
system.mem_ctrl.dram.perBankRdBursts::1           558                       # Per bank write bursts (Count)
system.mem_ctrl.dram.perBankRdBursts::2         24592                       # Per bank write bursts (Count)
system.mem_ctrl.dram.perBankRdBursts::3         51907                       # Per bank write bursts (Count)
system.mem_ctrl.dram.perBankRdBursts::4         51887                       # Per bank write bursts (Count)
system.mem_ctrl.dram.perBankRdBursts::5         52278                       # Per bank write bursts (Count)
system.mem_ctrl.dram.perBankRdBursts::6         28155                       # Per bank write bursts (Count)
system.mem_ctrl.dram.perBankRdBursts::7          6728                       # Per bank write bursts (Count)
system.mem_ctrl.dram.perBankRdBursts::8         16251                       # Per bank write bursts (Count)
system.mem_ctrl.dram.perBankRdBursts::9         16321                       # Per bank write bursts (Count)
system.mem_ctrl.dram.perBankRdBursts::10        16275                       # Per bank write bursts (Count)
system.mem_ctrl.dram.perBankRdBursts::11        10183                       # Per bank write bursts (Count)
system.mem_ctrl.dram.perBankRdBursts::12         1089                       # Per bank write bursts (Count)
system.mem_ctrl.dram.perBankRdBursts::13          171                       # Per bank write bursts (Count)
system.mem_ctrl.dram.perBankRdBursts::14        90026                       # Per bank write bursts (Count)
system.mem_ctrl.dram.perBankRdBursts::15           78                       # Per bank write bursts (Count)
system.mem_ctrl.dram.perBankWrBursts::0            46                       # Per bank write bursts (Count)
system.mem_ctrl.dram.perBankWrBursts::1             4                       # Per bank write bursts (Count)
system.mem_ctrl.dram.perBankWrBursts::2           421                       # Per bank write bursts (Count)
system.mem_ctrl.dram.perBankWrBursts::3           886                       # Per bank write bursts (Count)
system.mem_ctrl.dram.perBankWrBursts::4           898                       # Per bank write bursts (Count)
system.mem_ctrl.dram.perBankWrBursts::5           887                       # Per bank write bursts (Count)
system.mem_ctrl.dram.perBankWrBursts::6           501                       # Per bank write bursts (Count)
system.mem_ctrl.dram.perBankWrBursts::7           362                       # Per bank write bursts (Count)
system.mem_ctrl.dram.perBankWrBursts::8           878                       # Per bank write bursts (Count)
system.mem_ctrl.dram.perBankWrBursts::9           859                       # Per bank write bursts (Count)
system.mem_ctrl.dram.perBankWrBursts::10          877                       # Per bank write bursts (Count)
system.mem_ctrl.dram.perBankWrBursts::11          540                       # Per bank write bursts (Count)
system.mem_ctrl.dram.perBankWrBursts::12            0                       # Per bank write bursts (Count)
system.mem_ctrl.dram.perBankWrBursts::13            0                       # Per bank write bursts (Count)
system.mem_ctrl.dram.perBankWrBursts::14          500                       # Per bank write bursts (Count)
system.mem_ctrl.dram.perBankWrBursts::15           21                       # Per bank write bursts (Count)
system.mem_ctrl.dram.totQLat               3727082250                       # Total ticks spent queuing (Tick)
system.mem_ctrl.dram.totBusLat             5336780000                       # Total ticks spent in databus transfers (Tick)
system.mem_ctrl.dram.totMemAccLat         23740007250                       # Total ticks spent from burst creation until serviced by the DRAM (Tick)
system.mem_ctrl.dram.avgQLat                  3491.88                       # Average queueing delay per DRAM burst ((Tick/Count))
system.mem_ctrl.dram.avgBusLat                5000.00                       # Average bus latency per DRAM burst ((Tick/Count))
system.mem_ctrl.dram.avgMemAccLat            22241.88                       # Average memory access latency per DRAM burst ((Tick/Count))
system.mem_ctrl.dram.readRowHits               990695                       # Number of row buffer hits during reads (Count)
system.mem_ctrl.dram.writeRowHits                7105                       # Number of row buffer hits during writes (Count)
system.mem_ctrl.dram.readRowHitRate             92.82                       # Row buffer hit rate for reads (Ratio)
system.mem_ctrl.dram.writeRowHitRate            92.51                       # Row buffer hit rate for writes (Ratio)
system.mem_ctrl.dram.bytesPerActivate::samples        77228                       # Bytes accessed per row activation (Byte)
system.mem_ctrl.dram.bytesPerActivate::mean   890.857824                       # Bytes accessed per row activation (Byte)
system.mem_ctrl.dram.bytesPerActivate::gmean   797.816212                       # Bytes accessed per row activation (Byte)
system.mem_ctrl.dram.bytesPerActivate::stdev   272.137023                       # Bytes accessed per row activation (Byte)
system.mem_ctrl.dram.bytesPerActivate::0-127         2015      2.61%      2.61% # Bytes accessed per row activation (Byte)
system.mem_ctrl.dram.bytesPerActivate::128-255         2731      3.54%      6.15% # Bytes accessed per row activation (Byte)
system.mem_ctrl.dram.bytesPerActivate::256-383         2250      2.91%      9.06% # Bytes accessed per row activation (Byte)
system.mem_ctrl.dram.bytesPerActivate::384-511         2081      2.69%     11.75% # Bytes accessed per row activation (Byte)
system.mem_ctrl.dram.bytesPerActivate::512-639         3633      4.70%     16.46% # Bytes accessed per row activation (Byte)
system.mem_ctrl.dram.bytesPerActivate::640-767         2082      2.70%     19.15% # Bytes accessed per row activation (Byte)
system.mem_ctrl.dram.bytesPerActivate::768-895         1859      2.41%     21.56% # Bytes accessed per row activation (Byte)
system.mem_ctrl.dram.bytesPerActivate::896-1023         2007      2.60%     24.16% # Bytes accessed per row activation (Byte)
system.mem_ctrl.dram.bytesPerActivate::1024-1151        58570     75.84%    100.00% # Bytes accessed per row activation (Byte)
system.mem_ctrl.dram.bytesPerActivate::total        77228                       # Bytes accessed per row activation (Byte)
system.mem_ctrl.dram.dramBytesRead           68310784                       # Total bytes read (Byte)
system.mem_ctrl.dram.dramBytesWritten          491520                       # Total bytes written (Byte)
system.mem_ctrl.dram.avgRdBW              1568.207521                       # Average DRAM read bandwidth in MiBytes/s ((Byte/Second))
system.mem_ctrl.dram.avgWrBW                11.283802                       # Average DRAM write bandwidth in MiBytes/s ((Byte/Second))
system.mem_ctrl.dram.peakBW                  12800.00                       # Theoretical peak bandwidth in MiByte/s ((Byte/Second))
system.mem_ctrl.dram.busUtil                    12.34                       # Data bus utilization in percentage (Ratio)
system.mem_ctrl.dram.busUtilRead                12.25                       # Data bus utilization in percentage for reads (Ratio)
system.mem_ctrl.dram.busUtilWrite                0.09                       # Data bus utilization in percentage for writes (Ratio)
system.mem_ctrl.dram.pageHitRate                92.82                       # Row buffer hit rate, read and write combined (Ratio)
system.mem_ctrl.dram.power_state.pwrStateResidencyTicks::UNDEFINED  43559786000                       # Cumulative time (in ticks) in various power states (Tick)
system.mem_ctrl.dram.rank0.actEnergy        455881860                       # Energy for activate commands per rank (pJ) (Joule)
system.mem_ctrl.dram.rank0.preEnergy        242295570                       # Energy for precharge commands per rank (pJ) (Joule)
system.mem_ctrl.dram.rank0.readEnergy      6547108680                       # Energy for read commands per rank (pJ) (Joule)
system.mem_ctrl.dram.rank0.writeEnergy       20906100                       # Energy for write commands per rank (pJ) (Joule)
system.mem_ctrl.dram.rank0.refreshEnergy 3438296160.000000                       # Energy for refresh commands per rank (pJ) (Joule)
system.mem_ctrl.dram.rank0.actBackEnergy  19662225810                       # Energy for active background per rank (pJ) (Joule)
system.mem_ctrl.dram.rank0.preBackEnergy    169294080                       # Energy for precharge background per rank (pJ) (Joule)
system.mem_ctrl.dram.rank0.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
system.mem_ctrl.dram.rank0.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
system.mem_ctrl.dram.rank0.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
system.mem_ctrl.dram.rank0.totalEnergy    30536008260                       # Total energy per rank (pJ) (Joule)
system.mem_ctrl.dram.rank0.averagePower    701.013735                       # Core power per rank (mW) (Watt)
system.mem_ctrl.dram.rank0.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
system.mem_ctrl.dram.rank0.pwrStateTime::IDLE    223868000                       # Time in different power states (Tick)
system.mem_ctrl.dram.rank0.pwrStateTime::REF   1454440000                       # Time in different power states (Tick)
system.mem_ctrl.dram.rank0.pwrStateTime::SREF            0                       # Time in different power states (Tick)
system.mem_ctrl.dram.rank0.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
system.mem_ctrl.dram.rank0.pwrStateTime::ACT  41881478000                       # Time in different power states (Tick)
system.mem_ctrl.dram.rank0.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
system.mem_ctrl.dram.rank1.actEnergy         95583180                       # Energy for activate commands per rank (pJ) (Joule)
system.mem_ctrl.dram.rank1.preEnergy         50784690                       # Energy for precharge commands per rank (pJ) (Joule)
system.mem_ctrl.dram.rank1.readEnergy      1073813160                       # Energy for read commands per rank (pJ) (Joule)
system.mem_ctrl.dram.rank1.writeEnergy       19183500                       # Energy for write commands per rank (pJ) (Joule)
system.mem_ctrl.dram.rank1.refreshEnergy 3438296160.000000                       # Energy for refresh commands per rank (pJ) (Joule)
system.mem_ctrl.dram.rank1.actBackEnergy  12207883800                       # Energy for active background per rank (pJ) (Joule)
system.mem_ctrl.dram.rank1.preBackEnergy   6446634720                       # Energy for precharge background per rank (pJ) (Joule)
system.mem_ctrl.dram.rank1.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
system.mem_ctrl.dram.rank1.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
system.mem_ctrl.dram.rank1.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
system.mem_ctrl.dram.rank1.totalEnergy    23332179210                       # Total energy per rank (pJ) (Joule)
system.mem_ctrl.dram.rank1.averagePower    535.635763                       # Core power per rank (mW) (Watt)
system.mem_ctrl.dram.rank1.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
system.mem_ctrl.dram.rank1.pwrStateTime::IDLE  16628124500                       # Time in different power states (Tick)
system.mem_ctrl.dram.rank1.pwrStateTime::REF   1454440000                       # Time in different power states (Tick)
system.mem_ctrl.dram.rank1.pwrStateTime::SREF            0                       # Time in different power states (Tick)
system.mem_ctrl.dram.rank1.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
system.mem_ctrl.dram.rank1.pwrStateTime::ACT  25477221500                       # Time in different power states (Tick)
system.mem_ctrl.dram.rank1.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
system.mem_ctrl.power_state.pwrStateResidencyTicks::UNDEFINED  43559786000                       # Cumulative time (in ticks) in various power states (Tick)
system.membus.transDist::ReadReq              1090236                       # Transaction distribution (Count)
system.membus.transDist::ReadResp             1090235                       # Transaction distribution (Count)
system.membus.transDist::WriteReq              272058                       # Transaction distribution (Count)
system.membus.transDist::WriteResp             272058                       # Transaction distribution (Count)
system.membus.transDist::LockedRMWReadReq           12                       # Transaction distribution (Count)
system.membus.transDist::LockedRMWReadResp           12                       # Transaction distribution (Count)
system.membus.transDist::LockedRMWWriteReq           12                       # Transaction distribution (Count)
system.membus.transDist::LockedRMWWriteResp           12                       # Transaction distribution (Count)
system.membus.pktCount_system.cpu.fetch1.icache_port::system.mem_ctrl.port      1408907                       # Packet count per connected requestor and responder (Count)
system.membus.pktCount_system.cpu.fetch1.icache_port::total      1408907                       # Packet count per connected requestor and responder (Count)
system.membus.pktCount_system.cpu.execute.dcache_port::system.mem_ctrl.port      1315728                       # Packet count per connected requestor and responder (Count)
system.membus.pktCount_system.cpu.execute.dcache_port::total      1315728                       # Packet count per connected requestor and responder (Count)
system.membus.pktCount::total                 2724635                       # Packet count per connected requestor and responder (Count)
system.membus.pktSize_system.cpu.fetch1.icache_port::system.mem_ctrl.port     45084992                       # Cumulative packet size per connected requestor and responder (Byte)
system.membus.pktSize_system.cpu.fetch1.icache_port::total     45084992                       # Cumulative packet size per connected requestor and responder (Byte)
system.membus.pktSize_system.cpu.execute.dcache_port::system.mem_ctrl.port      3805400                       # Cumulative packet size per connected requestor and responder (Byte)
system.membus.pktSize_system.cpu.execute.dcache_port::total      3805400                       # Cumulative packet size per connected requestor and responder (Byte)
system.membus.pktSize::total                 48890392                       # Cumulative packet size per connected requestor and responder (Byte)
system.membus.snoops                                0                       # Total snoops (Count)
system.membus.snoopTraffic                          0                       # Total snoop traffic (Byte)
system.membus.snoopFanout::samples            1362318                       # Request fanout histogram (Count)
system.membus.snoopFanout::mean                     0                       # Request fanout histogram (Count)
system.membus.snoopFanout::stdev                    0                       # Request fanout histogram (Count)
system.membus.snoopFanout::underflows               0      0.00%      0.00% # Request fanout histogram (Count)
system.membus.snoopFanout::0                  1362318    100.00%    100.00% # Request fanout histogram (Count)
system.membus.snoopFanout::1                        0      0.00%    100.00% # Request fanout histogram (Count)
system.membus.snoopFanout::overflows                0      0.00%    100.00% # Request fanout histogram (Count)
system.membus.snoopFanout::min_value                0                       # Request fanout histogram (Count)
system.membus.snoopFanout::max_value                0                       # Request fanout histogram (Count)
system.membus.snoopFanout::total              1362318                       # Request fanout histogram (Count)
system.membus.power_state.pwrStateResidencyTicks::UNDEFINED  43559786000                       # Cumulative time (in ticks) in various power states (Tick)
system.membus.reqLayer2.occupancy          1634388000                       # Layer occupancy (ticks) (Tick)
system.membus.reqLayer2.utilization               0.0                       # Layer utilization (Ratio)
system.membus.respLayer0.occupancy         3716033250                       # Layer occupancy (ticks) (Tick)
system.membus.respLayer0.utilization              0.1                       # Layer utilization (Ratio)
system.membus.respLayer1.occupancy         1168566000                       # Layer occupancy (ticks) (Tick)
system.membus.respLayer1.utilization              0.0                       # Layer utilization (Ratio)
system.membus.snoop_filter.totRequests              0                       # Total number of requests made to the snoop filter. (Count)
system.membus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
system.membus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
system.membus.snoop_filter.totSnoops                0                       # Total number of snoops made to the snoop filter. (Count)
system.membus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
system.membus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
system.workload.inst.arm                            0                       # number of arm instructions executed (Count)
system.workload.inst.quiesce                        0                       # number of quiesce instructions executed (Count)
system.cpu.idleCycles                        35168729                       # Total number of cycles that the object has spent stopped (Unspecified)
system.cpu.tickCycles                         8391057                       # Number of cycles that the object actually ticked (Unspecified)

---------- End Simulation Statistics   ----------
